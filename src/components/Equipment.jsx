import React, { useEffect, useState } from "react";

const Equipment = ({ emp, setEmp }) => {
  const [show, setShow] = useState("img");
  const [major, setMajor] = useState("vehicle");
  const vehicle = [
    {
      img: "/img/equipments/vehicle/excavator.svg",
      name: "–≠–∫—Å–∫–∞–≤–∞—Ç–æ—Ä/Excavator",
    },
    { img: "/img/equipments/vehicle/loader.svg", name: "–ö–æ–≤—à/Loader" },
    { img: "/img/equipments/vehicle/hovo.svg", name: "–•–æ–≤–æ/Dump truck" },
    { img: "/img/equipments/vehicle/dump.svg", name: "–î–∞–º–ø/Mining dump truck" },
    {
      img: "/img/equipments/vehicle/shovelExcavator.svg",
      name: "–®–æ—É–ª –≠–∫—Å–∫–∞–≤–∞—Ç–æ—Ä / Shovel excavator",
    },
    {
      img: "/img/equipments/vehicle/bulldozer.svg",
      name: "–ë—É–ª–ª–¥–æ–∑–µ—Ä/Bullldozer",
    },
    { img: "/img/equipments/vehicle/graders.svg", name: "Motor graders" },
    { img: "/img/equipments/vehicle/blasthole.svg", name: "Blasthole drills" },
    { img: "/img/equipments/vehicle/drill.svg", name: "Hardrock drill" },
    { img: "/img/equipments/vehicle/bolter.svg", name: "Hardrock bolter" },
  ];

  const equip = [
    { img: "/img/equipments/equip/pump.svg", name: "–ù–∞—Å–æ—Å / Pump" },
    {
      img: "/img/equipments/equip/floatation.svg",
      name: "–ë–∞—è–∂—É—É–ª–∞—Ö / Floatation",
    },
    {
      img: "/img/equipments/equip/thickener.svg",
      name: "”®—Ç–≥”©—Ä“Ø“Ø–ª—ç–≥—á / Thickener",
    },
    { img: "/img/equipments/equip/crusher.svg", name: "–ë—É—Ç–ª—É—É—Ä / Crusher" },
    {
      img: "/img/equipments/equip/grinding.svg",
      name: "–ù—É–Ω—Ç–∞–≥–ª–∞–ª—Ç / Grinding",
    },
    {
      img: "/img/equipments/equip/conveyor.svg",
      name: "–¢—É—É–∑–∞–Ω –¥–∞–º–∂—É—É—Ä–≥–∞ / Conveyor",
    },
  ];

  const engineer = [
    {
      img: "üåç",
      name: "–ì–µ–æ–ª–æ–≥–∏—á",
    },
    {
      img: "‚õ∞Ô∏è",
      name: "–ì–µ–æ—Ç–µ—Ö–Ω–∏–∫–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üë®‚Äçüè≠",
      name: "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üë∑‚Äç‚ôÇÔ∏è",
      name: "–ú–µ—Ö–∞–Ω–∏–∫ –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "‚ö°",
      name: "–¶–∞—Ö–∏–ª–≥–∞–∞–Ω—ã –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üèóÔ∏è",
      name: "–ë–∞—Ä–∏–ª–≥—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "‚öôÔ∏è",
      name: "–ü—Ä–æ—Ü–µ—Å—Å —É–¥–∏—Ä–¥–ª–∞–≥—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üß™",
      name: "–•–∏–º–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "‚úçÔ∏è",
      name: "–ó—É—Ä–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üìè",
      name: "–ì–µ–æ–¥–µ–∑–∏/–ú–∞—Ä–∫—à–µ–π–¥–µ—Ä",
    },
    {
      img: "üìä",
      name: "–ê–≤—Ç–æ–º–∞—Ç–∂—É—É–ª–∞–ª—Ç—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üí®",
      name: "–ê–≥–∞–∞—Ä–∂—É—É–ª–∞–ª—Ç—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "‚ôªÔ∏è",
      name: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üíº",
      name: "–¢–µ—Å–ª–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üåê",
      name: "–°–∏—Å—Ç–µ–º–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üõ°Ô∏è",
      name: "–ê—é—É–ª–≥“Ø–π –±–∞–π–¥–ª—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üíª",
      name: "IT –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üîß",
      name: "–¢–æ–Ω–æ–≥ —Ç”©—Ö”©”©—Ä”©–º–∂–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "üö∞",
      name: "–£—Å–Ω—ã –∏–Ω–∂–µ–Ω–µ—Ä",
    },
    {
      img: "‚úèÔ∏è",
      name: "–ß–∞–Ω–∞—Ä—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    },
  ];

  const welding = [
    "–ì–∞—Ä –≥–∞–≥–Ω—É—É—Ä",
    "–•–∞–≥–∞—Å –∞–≤—Ç–æ–º–∞—Ç",
    "–ê–≤—Ç–æ–º–∞—Ç –≥–∞–≥–Ω—É—É—Ä",
    "–¶–∞—Ö–∏–ª–≥–∞–∞–Ω –Ω—É–º–∞–Ω –≥–∞–≥–Ω—É—É—Ä",
    "–î–∞—Ä–∞–ª—Ç—ã–Ω –≥–∞–≥–Ω—É—É—Ä",
    "–•–∏–π –≥–∞–≥–Ω—É—É—Ä (Gas Welding)",
    "–•—ç—Ç –∞–≤–∏–∞–Ω—ã –≥–∞–≥–Ω—É—É—Ä (Ultrasonic Welding)",
    "–õ–∞–∑–µ—Ä –≥–∞–≥–Ω—É—É—Ä",
    "–•—É–≤–∞–Ω—Ü–∞—Ä –≥–∞–≥–Ω—É—É—Ä (Plastic Welding)",
  ];

  const mechanic = [
    "–•“Ø–Ω–¥ –æ–≤–æ—Ä",
    "–î—É–Ω–¥ –æ–≤–æ—Ä",
    "–•”©–Ω–≥”©–Ω –æ–≤–æ—Ä",
    "–°—É—É—Ä–∏–Ω —Ç–æ–Ω–æ–≥ —Ç”©—Ö”©”©—Ä”©–º–∂",
    "”®—Ä”©—Ö —Ç–æ–Ω–æ–≥ —Ç”©—Ö”©”©—Ä”©–º–∂",
  ];

  const habea = [
    "–•–ê–ë–≠–ê –∑”©–≤–ª”©—Ö",
    "–•–ê–ë–≠–ê –∞–∂–∏–ª—Ç–∞–Ω",
    "–ë–∞–π–≥–∞–ª—å –æ—Ä—á–Ω—ã –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω",
    "–ë–∞–π–≥–∞–ª—å –æ—Ä—á–Ω—ã —ç—Ä–¥—ç–º—Ç—ç–Ω",
    "–ë–∞–π–≥–∞–ª—å –æ—Ä—á–Ω—ã –º–µ–Ω–µ–∂–µ—Ä",
    "–¢–æ–≥—Ç–≤–æ—Ä—Ç–æ–π —Ö”©–≥–∂–ª–∏–π–Ω –º–µ–Ω–µ–∂–µ—Ä",
    "–•”©–¥”©–ª–º”©—Ä–∏–π–Ω —ç—Ä“Ø“Ø–ª –º—ç–Ω–¥–∏–π–Ω –∑”©–≤–ª”©—Ö",
    "–û–Ω—Ü–≥–æ–π –±–∞–π–¥–ª—ã–Ω –∑–æ—Ö–∏—Ü—É—É–ª–∞–≥—á",
    "–≠—Ä—Å–¥—ç–ª–∏–π–Ω –º–µ–Ω–µ–∂–º–µ–Ω—Ç–∏–π–Ω –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω",
    "–ë–∞–π–≥–∞–ª—å –æ—Ä—á–Ω—ã –∑–æ—Ö–∏—Ü—É—É–ª–∞–≥—á",
    "–ê–≥–∞–∞—Ä—ã–Ω —á–∞–Ω–∞—Ä—ã–Ω –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω",
    "–•–æ–≥ —Ö–∞—è–≥–¥–ª—ã–Ω –º–µ–Ω–µ–∂–µ—Ä",
    "–£—Å–Ω—ã –Ω”©”©—Ü–∏–π–Ω –º–µ–Ω–µ–∂–µ—Ä",
    "–ó—ç—Ä–ª—ç–≥ –∞–Ω –∞–º—å—Ç–∞–Ω",
    "–ë–∏–æ –æ–ª–æ–Ω —è–Ω–∑ –±–∞–π–¥–ª—ã–Ω –∑”©–≤–ª”©—Ö",
  ];
  useEffect(() => {
    if (
      emp.major === "–ú–∞—à–∏–Ω –º–µ—Ö–∞–Ω–∏–∑–º—ã–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä" ||
      emp.major === "–°—É—É—Ä–∏–Ω —Ç”©—Ö”©”©—Ä”©–º–∂–∏–π–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä" ||
      emp.major === "–ò–Ω–∂–µ–Ω–µ—Ä"
    ) {
      setShow("img");
    } else {
      setShow("noImg");
    }
  }, [emp]);

  useEffect(() => {
    switch (emp.major) {
      case "–ú–∞—à–∏–Ω –º–µ—Ö–∞–Ω–∏–∑–º—ã–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä":
        setMajor("car");
        break;

      case "–ò–Ω–∂–µ–Ω–µ—Ä":
        setMajor("engineer");
        break;
      case "–ì–∞–≥–Ω—É—É—Ä":
        setMajor("welding");
        break;
      case "–ú–µ—Ö–∞–Ω–∏–∫":
        setMajor("mechanic");
        break;
      case "–ê—é—É–ª–≥“Ø–π –∞–∂–∏–ª–ª–∞–≥–∞–∞":
        setMajor("habea");
        break;
      default:
        setMajor("equip");
    }
  }, [emp]);

  const items =
    major === "car"
      ? vehicle
      : major === "equip"
      ? equip
      : major === "engineer"
      ? engineer
      : major === "welding"
      ? welding
      : major === "mechanic"
      ? mechanic
      : habea;

  const selectedItems =
    major === "car"
      ? emp.driving?.car || []
      : major === "equip"
      ? emp.equipment
      : "";
  const isAllSelected = selectedItems.length === items.length;

  return (
    <div className="text-center">
      <p className="text-[22px] text-[#1A1A1A] font-semibold mb-6">
        {major === "car"
          ? "–ñ–æ–ª–æ–æ–¥–¥–æ–≥ —Ç–æ–Ω–æ–≥ —Ç”©—Ö”©”©—Ä”©–º–∂”©”© —Å–æ–Ω–≥–æ–Ω–æ —É—É."
          : "–ê–∂–∏–ª–ª–∞–¥–∞–≥ —Ç–æ–Ω–æ–≥ —Ç”©—Ö”©”©—Ä”©–º–∂”©”© —Å–æ–Ω–≥–æ–Ω–æ —É—É."}
      </p>
      {emp.major === "–ú–∞—à–∏–Ω –º–µ—Ö–∞–Ω–∏–∑–º—ã–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä" ||
      emp.major === "–°—É—É—Ä–∏–Ω —Ç”©—Ö”©”©—Ä”©–º–∂–∏–π–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä" ? (
        <div
          className="w-full border-2 border-[#fff] border-opacity-30 bg-[#fff] bg-opacity-30 py-3 px-4 flex items-center gap-3 rounded-lg mb-4 cursor-pointer"
          onClick={() => {
            setEmp((prev) => ({
              ...prev,
              [show === "car" ? "driving" : "equipment"]:
                show === "car"
                  ? {
                      ...prev.driving,
                      car: isAllSelected ? [] : items.map((item) => item.name),
                    }
                  : isAllSelected
                  ? []
                  : items.map((item) => item.name),
            }));
          }}
        >
          <div
            className={`w-[22px] h-[22px] rounded-md flex items-center justify-center ${
              isAllSelected
                ? "bg-[#324D72]"
                : "border-2 border-[#fff] border-opacity-80 bg-[#fff] bg-opacity-30"
            }`}
          >
            {isAllSelected && <img src="/icon/check.svg" alt="check" />}
          </div>
          <p className="text-[#657081] text-lg">–ë“Ø–≥–¥–∏–π–≥ —Å–æ–Ω–≥–æ—Ö</p>
        </div>
      ) : (
        ""
      )}

      <div className="flex items-center flex-wrap justify-between gap-2 max-h-[350px] overflow-y-scroll">
        {show === "img"
          ? items.map((item, index) => (
              <div
                key={index}
                tabIndex={0}
                className={`w-[160px] h-[150px] flex items-center justify-center border rounded-xl cursor-pointer ${
                  major === "engineer"
                    ? emp.workMajor === item.name
                      ? "border-[#324d72] bg-[#F4F6FB]"
                      : "border-[#fff] border-opacity-80 bg-[#fff] bg-opacity-30"
                    : selectedItems.includes(item.name)
                    ? "border-[#324d72] bg-[#F4F6FB]"
                    : "border-[#fff] border-opacity-80 bg-[#fff] bg-opacity-30"
                }`}
                onClick={() => {
                  if (major === "engineer") {
                    setEmp({ ...emp, workMajor: item.name });
                  } else {
                    setEmp((prev) => ({
                      ...prev,
                      [major === "car" ? "driving" : "equipment"]:
                        major === "car"
                          ? {
                              ...prev.driving,
                              car: selectedItems.includes(item.name)
                                ? selectedItems.filter(
                                    (equip) => equip !== item.name
                                  )
                                : [...selectedItems, item.name],
                            }
                          : selectedItems.includes(item.name)
                          ? selectedItems.filter((equip) => equip !== item.name)
                          : [...selectedItems, item.name],
                    }));
                  }
                }}
              >
                <div>
                  <div className="flex justify-center">
                    {major === "engineer" ? (
                      <p className="text-3xl">{item.img}</p>
                    ) : (
                      <img src={item.img} alt={item.name} />
                    )}
                  </div>
                  <p className="text-sm text-[#1A1A1A]">{item.name}</p>
                </div>
              </div>
            ))
          : items.map((item, index) => (
              <div
                onClick={() => {
                  setEmp({ ...emp, workMajor: item });
                }}
                key={index}
                className={`w-full border ${
                  emp.workMajor === item
                    ? "border-[#324d72] bg-[#F4F6FB]"
                    : "border-[#fff] border-opacity-80 bg-[#fff] bg-opacity-30"
                } py-3 px-4 flex items-center gap-2 rounded-lg`}
              >
                <div
                  className={`w-[20px] h-[20px] flex items-center justify-center p-0.5 border-2 rounded-full ${
                    emp.workMajor === item
                      ? "border-[#324d72]"
                      : "border-[#fff] border-opacity-80"
                  }`}
                >
                  {emp.workMajor === item && (
                    <div className="w-full h-full bg-[#324d72] rounded-full"></div>
                  )}
                </div>
                <p className="text-lg font-semibold text-[#1E293B]">{item}</p>
              </div>
            ))}
      </div>
    </div>
  );
};

export default Equipment;
